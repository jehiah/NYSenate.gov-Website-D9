<?php

/**
 * @file
 * Custom functionality for the nys_school_forms module.
 */

use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_post_execute().
 */
function nys_school_forms_views_post_execute(ViewExecutable $view) {
  // Rewrite the view results to make it look like each student submission.
  if ($view->id() == 'school_forms') {
    $new_result_array = [];
    foreach ($view->result as $key => $result) {
      // Check for the composite field.
      /** @var \Drupal\webform\Entity\WebformSubmission $original_entity */
      $original_entity = $result->_entity;
      if (!empty($original_entity->getData()['attach_your_submission'])) {
        $composite = $original_entity->getData()['attach_your_submission'];
        $relationship_data = [];
        foreach ($composite as $student) {
          // Create a new result for each student.
          $new_result = new $result();
          $new_result->index = $result->index;
          // Duplicate the entity so we can alter it.
          $entity = $original_entity->createDuplicate();
          $entity->setCompletedTime($original_entity->getCompletedTime());
          $data = $original_entity->getData();
          // Set the data for composite field to one student's data.
          $data['attach_your_submission'] = [$student];
          $entity->setData($data);
          // Add the new entity to our new result.
          $new_result->_entity = $entity;
          $relationship_data = $result->_relationship_entities;
          $relationship_data['webform_submission_reverse_reference__school_form__school_name'] = $entity;
          $new_result->_relationship_entities = $relationship_data;
          // Add the result to the updated results array.
          $new_result_array[] = $new_result;
        }
      }
    }
    // Replace view results with our computed ones.
    $view->result = $new_result_array;
  }
}
